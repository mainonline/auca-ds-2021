
main.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
#include <iostream>

using namespace std;

int main()
{
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
#ifdef AUCA_DEBUG
    cout << "Author: Zhoomart Akimov" << endl;
#endif
    cout << "Hello C++ " <<  __cplusplus << "!!!" << endl;
   8:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # f <main+0xf>
   f:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 16 <main+0x16>
  16:	e8 00 00 00 00       	callq  1b <main+0x1b>
  1b:	be ba 12 03 00       	mov    $0x312ba,%esi
  20:	48 89 c7             	mov    %rax,%rdi
  23:	e8 00 00 00 00       	callq  28 <main+0x28>
  28:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 2f <main+0x2f>
  2f:	48 89 c7             	mov    %rax,%rdi
  32:	e8 00 00 00 00       	callq  37 <main+0x37>
  37:	48 89 c2             	mov    %rax,%rdx
  3a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 41 <main+0x41>
  41:	48 89 c6             	mov    %rax,%rsi
  44:	48 89 d7             	mov    %rdx,%rdi
  47:	e8 00 00 00 00       	callq  4c <main+0x4c>
  4c:	b8 00 00 00 00       	mov    $0x0,%eax
  51:	5d                   	pop    %rbp
  52:	c3                   	retq   

0000000000000053 <_Z41__static_initialization_and_destruction_0ii>:
  53:	f3 0f 1e fa          	endbr64 
  57:	55                   	push   %rbp
  58:	48 89 e5             	mov    %rsp,%rbp
  5b:	48 83 ec 10          	sub    $0x10,%rsp
  5f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  62:	89 75 f8             	mov    %esi,-0x8(%rbp)
  65:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  69:	75 32                	jne    9d <_Z41__static_initialization_and_destruction_0ii+0x4a>
  6b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  72:	75 29                	jne    9d <_Z41__static_initialization_and_destruction_0ii+0x4a>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
  74:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 7b <_Z41__static_initialization_and_destruction_0ii+0x28>
  7b:	e8 00 00 00 00       	callq  80 <_Z41__static_initialization_and_destruction_0ii+0x2d>
  80:	48 8d 15 00 00 00 00 	lea    0x0(%rip),%rdx        # 87 <_Z41__static_initialization_and_destruction_0ii+0x34>
  87:	48 8d 35 00 00 00 00 	lea    0x0(%rip),%rsi        # 8e <_Z41__static_initialization_and_destruction_0ii+0x3b>
  8e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 95 <_Z41__static_initialization_and_destruction_0ii+0x42>
  95:	48 89 c7             	mov    %rax,%rdi
  98:	e8 00 00 00 00       	callq  9d <_Z41__static_initialization_and_destruction_0ii+0x4a>
  9d:	90                   	nop
  9e:	c9                   	leaveq 
  9f:	c3                   	retq   

00000000000000a0 <_GLOBAL__sub_I_main>:
  a0:	f3 0f 1e fa          	endbr64 
  a4:	55                   	push   %rbp
  a5:	48 89 e5             	mov    %rsp,%rbp
  a8:	be ff ff 00 00       	mov    $0xffff,%esi
  ad:	bf 01 00 00 00       	mov    $0x1,%edi
  b2:	e8 9c ff ff ff       	callq  53 <_Z41__static_initialization_and_destruction_0ii>
  b7:	5d                   	pop    %rbp
  b8:	c3                   	retq   
